@mixin font-size($sizeValue: 1.4){
  font-size: ($sizeValue * 1) + em;
  font-size: ($sizeValue / 10) + rem;
  line-height: $default-line-height;
  margin-top: $default-top-margin + em;
  margin-bottom: $default-bottom-margin + em;
}

@mixin box-sizing($type: border-box){ 
  -webkit-box-sizing: $type;
  -moz-box-sizing: $type;
  box-sizing: $type; 
}

@mixin grayscale($disabled: true){
  @if $disabled == true{
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
    filter: gray; /* IE6-9 */
    -webkit-filter: grayscale(100%); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
  }
  @else {
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    -webkit-filter: grayscale(0%);
  }
}

@mixin opacity($opacityValue){
  zoom: 1;
  filter: alpha(opacity=$opacityValue*100);
  opacity: $opacityValue;
}

@mixin basic-transtion($props, $duration, $ease){
  -webkit-transition: $props $duration $ease;
  -moz-transition:    $props $duration $ease;
  -ms-transition:     $props $duration $ease;
  -o-transition:      $props $duration $ease;
  transition:         $props $duration $ease;
}